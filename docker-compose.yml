services:
  db:
    image: postgres:15
    container_name: db
    restart: always
    env_file:
      - prod.env
    environment:
      POSTGRES_DB: claim
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres", "-d", "claim"]
      interval: 30s
      retries: 3
      start_period: 10s
      timeout: 10s

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: django_app
    restart: always
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    env_file:
      - prod.env
    expose:
      - "8000"
    ports:
      - "8000:8000"
#    volumes:
#      - .:/app
#    working_dir: /app

    healthcheck:
      test: ["CMD", "curl", "--silent", "--fail", "http://backend/health"]
      interval: 30s
      retries: 3
      start_period: 10s
      timeout: 10s

  nginx:
    image: nginx:latest
    container_name: nginx
    restart: always
    depends_on:
      - backend
    ports:
      - "80:80"
    volumes:
      - ./frontend/dist:/usr/share/nginx/html
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf

  redis:
    image: redis:alpine
    container_name: redis
    restart: always
    ports:
      - "6379:6379"

volumes:
  postgres_data:
